import numpy as np
def prog(a, b, c, d, N):
    A1 = np.array([0.0] * (N + 1))
    B1 = np.array([0.0] * (N + 1))
    for i in range(N):
        A1[i + 1] = -c[i] / (a[i] * A1[i] + b[i])
        B1[i + 1] = (d[i] - a[i] * B1[i]) / (a[i] * A1[i] + b[i])
    x = np.array([0.0] * N)
    x[N - 1] = B1[N]
    for i in range(N - 2, -1, -1):
        x[i] = A1[i + 1] * x[i + 1] + B1[i + 1]
    return x  
N = int(input())
A = np.ones((N,N)) * 0.0
a = np.random.rand(N)
b = np.random.rand(N)
c = np.random.rand(N)
d = np.random.rand(N)
a[0], c[N - 1] = 0, 0
for i in range(N):
    b[i] = abs(a[i]) + abs(b[i]) + abs(c[i]) + 1
    A[i][i] = b[i]
    if i > 0:
        A[i][i - 1] = a[i]
    if i < N - 1:
        A[i][i + 1] = c[i]
x = prog(a, b, c, d, N)
print(x)
